/*
* Copyright 2015-2021 OpenCB
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*     http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

package org.opencb.opencga.app.cli.main.options;

import com.beust.jcommander.JCommander;
import com.beust.jcommander.ParametersDelegate;
import com.beust.jcommander.Parameter;
import static org.opencb.opencga.app.cli.GeneralCliOptions.*;
import com.beust.jcommander.Parameters;


/*
* WARNING: AUTOGENERATED CODE
*
* This code was generated by a tool.
* Autogenerated on: 2021-08-05 17:10:12
*
* Manual changes to this file may cause unexpected behavior in your application.
* Manual changes to this file will be overwritten if the code is regenerated.
*/


/**
 * This class contains methods for the Meta command line.
 *    Command line version: 2.1.0
 *    PATH: meta
 */
@Parameters(commandNames = {"meta"}, commandDescription = "Meta commands")
public class MetaCommandOptions {

        public JCommander jCommander;
        public CommonCommandOptions commonCommandOptions;

        public AboutCommandOptions aboutCommandOptions;
        public ApiCommandOptions apiCommandOptions;
        public FailCommandOptions failCommandOptions;
        public PingCommandOptions pingCommandOptions;
        public StatusCommandOptions statusCommandOptions;


    public MetaCommandOptions(CommonCommandOptions commonCommandOptions, JCommander jCommander) {
    
        this.jCommander = jCommander;
        this.commonCommandOptions = commonCommandOptions;
        this.aboutCommandOptions = new AboutCommandOptions();
        this.apiCommandOptions = new ApiCommandOptions();
        this.failCommandOptions = new FailCommandOptions();
        this.pingCommandOptions = new PingCommandOptions();
        this.statusCommandOptions = new StatusCommandOptions();
    
    }
    
    
    @Parameters(commandNames = {"about"}, commandDescription = "Returns info about current OpenCGA code.")
    public class AboutCommandOptions {
    
        @ParametersDelegate
        public CommonCommandOptions commonOptions = commonCommandOptions;
    
  }
  
  
    @Parameters(commandNames = {"api"}, commandDescription = "API.")
    public class ApiCommandOptions {
    
        @ParametersDelegate
        public CommonCommandOptions commonOptions = commonCommandOptions;
    
        @Parameter(names = {"--category"}, description = "List of categories to get API from", required = false, arity = 1)
        public String category; 
    
  }
  
  
    @Parameters(commandNames = {"fail"}, commandDescription = "Ping Opencga webservices.")
    public class FailCommandOptions {
    
        @ParametersDelegate
        public CommonCommandOptions commonOptions = commonCommandOptions;
    
  }
  
  
    @Parameters(commandNames = {"ping"}, commandDescription = "Ping Opencga webservices.")
    public class PingCommandOptions {
    
        @ParametersDelegate
        public CommonCommandOptions commonOptions = commonCommandOptions;
    
  }
  
  
    @Parameters(commandNames = {"status"}, commandDescription = "Database status.")
    public class StatusCommandOptions {
    
        @ParametersDelegate
        public CommonCommandOptions commonOptions = commonCommandOptions;
    
  }
  
  
}
