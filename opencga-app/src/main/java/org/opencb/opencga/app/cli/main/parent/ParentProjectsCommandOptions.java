package org.opencb.opencga.app.cli.main.parent;

import com.beust.jcommander.JCommander;
import com.beust.jcommander.Parameter;
import com.beust.jcommander.Parameters;
import com.beust.jcommander.ParametersDelegate;

import static org.opencb.opencga.app.cli.GeneralCliOptions.CommonCommandOptions;
/*
 * WARNING: AUTOGENERATED CODE
 *
 * This code was generated by a tool.
 * Autogenerated on: 2021-10-11
 *
 * Manual changes to this file may cause unexpected behavior in your application.
 * Manual changes to this file will be overwritten if the code is regenerated.
 */

/**
 * This class contains methods for the Files command line. OpenCGA version: 2.2.0-SNAPSHOT PATH: /{apiVersion}/files
 */
@Parameters(commandNames = {"projects"}, commandDescription = "Projects commands")
public class ParentProjectsCommandOptions {

    public JCommander jCommander;
    public CommonCommandOptions commonCommandOptions;
    public ParentProjectsCommandOptions.CreateCommandOptions createCommandOptions;

    public ParentProjectsCommandOptions(CommonCommandOptions commonCommandOptions, JCommander jCommander) {

        this.jCommander = jCommander;
        this.commonCommandOptions = commonCommandOptions;
        this.createCommandOptions = new CreateCommandOptions();
    }

    @Parameters(commandNames = {"create"}, commandDescription = "Create a new project")
    public class CreateCommandOptions {

        @ParametersDelegate
        public CommonCommandOptions commonOptions = commonCommandOptions;

        @Parameter(names = {"--id"}, description = "Project id, this must be unique for the user", required = true, arity = 1)
        public String id;

        @Parameter(names = {"-n", "--name"}, description = "Project name", required = true, arity = 1)
        public String name;

        @Parameter(names = {"-d", "--description"}, description = "A brief description of the content of this project", arity = 1)
        public String description;

        @Parameter(names = {"--organism-scientific-name"}, description = "Organism scientific name, e.g. Homo sapiens", required = true,
                arity = 1)
        public String scientificName;

        @Parameter(names = {"--organism-common-name"}, description = "Organism common name", arity = 1)
        public String commonName;

        @Parameter(names = {"--organism-assembly"}, description = "Organism assembly, e.g. GRCh38", required = true, arity = 1)
        public String assembly;
    }
}