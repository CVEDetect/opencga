{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "_artifactsLocation": {
            "type": "string",
            "metadata": {
                "description": "Artifacts location."
            }
        },
        "_artifactsLocationSasToken": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "Artifacts location SAS token."
            }
        },
        "location": {
            "type": "string",
            "defaultValue": "[resourceGroup().location]",
            "metadata": {
                "description": "Location for all resources."
            }
        },
        "clusterName" : {
            "type": "string",
            "metadata": {
                "description": "Cluster name."
            }
        },
        "vmSize": {
            "type": "string",
            "metadata": {
                "description": "Size of vm (e.g. Standard_D1_v2)"
            },
            "defaultValue": "Standard_D1_v2"
        },
        "diskType": {
            "type": "string",
            "defaultValue": "StandardSSD_LRS",
            "allowedValues": [
                "Standard_LRS",
                "Premium_LRS",
                "StandardSSD_LRS"
            ],
            "metadata": {
                "description": "Storage Account type"
            }
        },
        "diskSizeGB": {
            "type": "int",
            "defaultValue": 2049,
            "metadata": {
                "description": "Size of the data disk for MongoDB."
            }
        },
        "dnsZonesName": {
            "type": "string",
            "metadata": {
                "description": "DNS Zones name."
            }
        },
        "clusterSize": {
            "type": "int",
            "defaultValue": 3,
            "allowedValues": [
                1,
                3,
                5,
                7,
                9,
                11
            ],
            "metadata": {
                "description": "Amount of VMs to deploy for the mongodb replica set"
            }
        },
        "adminUsername": {
            "type": "string",
            "metadata": {
                "description": "The username for all mongoDB VMs (also used for connecting oer SSH)"
            }
        },
        "adminSSHKeyData": {
            "type": "string",
            "metadata": {
                "description": "The mongoDB VM public SSH key"
            }
        },
        "mongoDBUsername": {
            "type": "string",
            "defaultValue": "opencga",
            "metadata": {
                "description": "The username for connecting to mongoDB"
            }
        },
        "mongoDBPassword": {
            "type": "securestring",
            "metadata": {
                "description": "The password for connecting to mongoDB"
            }
        },
        "subnetId": {
            "type": "string",
            "metadata": {
                "description": "Subnet ID"
            }
        },
        "LogAnalyticsActive": {
            "type": "bool",
            "defaultValue": true,
            "metadata": {
                "description": "Log Analytics activation"
            }
        },
        "LogAnalyticsWorkspaceID": {
            "type": "string",
            "metadata": {
                "description": "Log Analytics Workspace ID"
            }
        },
        "LogAnalyticsWorkspaceKey": {
            "type": "string",
            "metadata": {
                "description": "Log Analytics Workspace Key"
            }
        },
        "LogAnalyticsWorkspaceResourceID": {
            "type": "string",
            "metadata": {
                "description": "Log Analytics Workspace Resource ID"
            }
        },
        "mongoDbDumpUrl": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "The URL pointing to a tar.gz zip of the a mongo dump"
            }
        }
    },
    "variables": {
        "namingPrefix":"[concat(parameters('clusterName'), '-mongodb')]",
        "vmName": "[concat(variables('namingPrefix'))]",
        "nicName": "[concat(variables('namingPrefix'), '-nic')]",

        "copy": [
            {
                "name": "dnsNames",
                "count": "[parameters('clusterSize')]",
                "input": {
                    "fqdn": "[concat(variables('vmName'), copyIndex('dnsNames'), '.', parameters('dnsZonesName'))]"
                }
            }
        ],
        "fqdn": "[concat(variables('vmName'), '#VM_INDEX#', '.', parameters('dnsZonesName'))]",
        "sshKeyPath": "[concat('/home/',parameters('adminUsername'),'/.ssh/authorized_keys')]",
        "_comment": "we need a single quote around the url to avoid & breaking out of the script https://stackoverflow.com/questions/33986180/how-to-escape-single-quote-in-arm-template",
        "singleQuote": "'",
        "cloudInitArray": [
            "#cloud-config",
            "",
            "package_upgrade: true",
            "package_reboot_if_required: true",
            "",
            "runcmd:",
            "- export DEBIAN_FRONTEND='noninteractive'",
            "[concat('- curl -fsSL ', concat(parameters('_artifactsLocation'), '/mongodb/installmongodb.sh'), ' -o /opt/installmongodb.sh')]",
            "[concat('- curl -fsSL ', concat(parameters('_artifactsLocation'), '/mongodb/renew_mongo_cert.sh'), ' -o /opt/renew_mongo_cert.sh')]",
            "- chmod +x /opt/installmongodb.sh /opt/renew_mongo_cert.sh",
            "[concat('- VM_INDEX=#VM_INDEX# CLUSTER_SIZE=', parameters('clusterSize'), ' MONGODB_DUMP_URL=', variables('singleQuote'), parameters('mongoDbDumpUrl'), variables('singleQuote'), ' MONGODB_USERNAME=', parameters('mongoDBUsername'), ' MONGODB_PASSWORD=', parameters('mongoDBPassword'),' APP_DNS_NAME=', variables('fqdn'), ' /bin/bash /opt/installmongodb.sh')]"
        ],
        "cloudInit": "[replace(replace(replace(string(variables('cloudInitArray')),'\",\"','\n'),'[\"',''),'\"]','')]"
    },
    "resources": [
        {
            "apiVersion": "2017-10-01",
            "type": "Microsoft.Network/networkInterfaces",
            "name": "[concat(variables('nicName'), copyIndex())]",
            "location": "[parameters('location')]",
            "copy": {
                "name": "mongo-ip",
                "count": "[parameters('clusterSize')]"
            },
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "subnet": {
                                "id": "[parameters('subnetId')]"
                            }
                        }
                    }
                ]
            },
            "resources": [
                {
                    "type": "providers/diagnosticSettings",
                    "condition" : "[parameters('LogAnalyticsActive')]",
                    "name": "[concat('Microsoft.Insights/', concat(variables('nicName'), copyIndex()))]",
                    "dependsOn": [
                        "[resourceId('Microsoft.Network/networkInterfaces',concat(variables('nicName'), copyIndex()))]"
                    ],
                    "apiVersion": "2017-05-01-preview",
                    "properties": {
                        "name": "[concat(variables('nicName'), copyIndex())]",
                        "workspaceId": "[parameters('LogAnalyticsWorkspaceResourceID')]",
                        "logs": [],
                        "metrics": [
                            {
                                "category": "AllMetrics",
                                "enabled": true,
                                "retentionPolicy": {
                                    "enabled": false,
                                    "days": 0
                                }
                            }
                        ]
                    }
                }
            ]
        },
        {
            "name": "[concat(variables('vmName'), copyIndex())]",
            "type": "Microsoft.Compute/virtualMachines",
            "apiVersion": "2018-06-01",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[concat('Microsoft.Network/networkInterfaces/', variables('nicName'), copyIndex())]"
            ],
            "copy": {
                "name": "mongo-rs",
                "count": "[parameters('clusterSize')]"
            },
            "properties": {
                "hardwareProfile": {
                    "vmSize": "[parameters('vmSize')]"
                },
                "storageProfile": {
                    "osDisk": {
                        "osType": "Linux",
                        "createOption": "FromImage",
                        "diskSizeGB": 64,
                        "managedDisk": {
                            "storageAccountType": "StandardSSD_LRS"
                        }
                    },
                    "dataDisks": [
                        {
                            "diskSizeGB": "[parameters('diskSizeGB')]",
                            "lun": 0,
                            "createOption": "Empty",
                            "managedDisk": {
                                "storageAccountType": "[parameters('diskType')]"
                            }
                        }
                    ],
                    "imageReference": {
                        "publisher": "Canonical",
                        "offer": "UbuntuServer",
                        "sku": "16.04-LTS",
                        "version": "latest"
                    }
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', concat(variables('nicName'), copyIndex()))]"
                        }
                    ]
                },
                "osProfile": {
                    "computerName": "[concat(variables('vmName'), copyIndex())]",
                    "customData": "[base64(replace(replace(replace(replace(string(variables('cloudInit')),'#VM_INDEX#',string(copyIndex())),'\",\"','\n'),'[\"',''),'\"]',''))]",
                    "linuxConfiguration": {
                        "disablePasswordAuthentication": true,
                        "ssh": {
                            "publicKeys": [
                                {
                                    "path": "[variables('sshKeyPath')]",
                                    "keyData": "[parameters('adminSSHKeyData')]"
                                }
                            ]
                        }
                    },
                    "adminUsername": "[parameters('adminUsername')]",
                    "allowExtensionOperations": true
                }
            },
            "tags": {}
        },
        {
            "type": "Microsoft.Compute/virtualMachines/extensions",
            "name": "[concat(concat(variables('vmName'), copyIndex()),'/CheckCloudInit')]",
            "apiVersion": "2019-12-01",
            "copy": {
                "name": "mongo-rs",
                "count": "[parameters('clusterSize')]"
            },
            "dependsOn": [
                "[concat(variables('vmName'), copyIndex())]"
            ],
            "location": "[resourceGroup().location]",
            "properties": {
                "publisher": "Microsoft.Azure.Extensions",
                "type": "CustomScript",
                "typeHandlerVersion": "2.0",
                "autoUpgradeMinorVersion": true,
                "settings": {
                    "commandToExecute": "bash -cex 'until [ -f /var/lib/cloud/instance/boot-finished ]; do echo \"Wait cloud-init\"; sleep 5; done; apt-get install -y jq; jq -e \"[] | length == 0\" /var/lib/cloud/data/result.json'"
                }
            }
        },
        {
            "type": "Microsoft.Compute/virtualMachines/extensions",
            "name": "[concat(concat(variables('vmName'), copyIndex()),'/OMSExtension')]",
            "apiVersion": "2019-12-01",
            "copy": {
                "name": "mongo-rs",
                "count": "[parameters('clusterSize')]"
            },
            "condition": "[parameters('LogAnalyticsActive')]",
            "dependsOn": [
                "[concat('Microsoft.Compute/virtualMachines/', variables('vmName'), copyIndex(), '/extensions/CheckCloudInit')]"
            ],
            "location": "[resourceGroup().location]",
            "properties": {
                "publisher": "Microsoft.EnterpriseCloud.Monitoring",
                "type": "OmsAgentForLinux",
                "typeHandlerVersion": "1.13",
                "autoUpgradeMinorVersion": true,
                "settings": {
                    "workspaceId": "[parameters('LogAnalyticsWorkspaceID')]"
                },
                "protectedSettings": {
                    "workspaceKey": "[parameters('LogAnalyticsWorkspaceKey')]"
                }
            }
        }
    ],
    "outputs": {
        "mongoDBUser": {
            "value": "[parameters('mongoDBUsername')]",
            "type": "string"
        },
        "mongoDBPassword": {
            "value": "[parameters('mongoDBPassword')]",
            "type": "string"
        },
        "mongoClusterSize": {
            "value": "[parameters('clusterSize')]",
            "type": "int"
        },
        "dnsNames": {
            "value": "[variables('dnsNames')]",
            "type": "array"
        }
    }
}